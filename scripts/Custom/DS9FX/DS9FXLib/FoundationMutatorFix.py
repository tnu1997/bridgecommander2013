from bcdebug import debug
# Many people find it annoying that their mutators get deactivated sometimes, and to be honest there are a lot of mods out there with mutators.
# So what we do over here is simply fix that by saving a backup mutator list which user will have to make. This doesn't interfere with the workings of
# Foundation in anyway! With one click we restore mutator settings instantly without the need to restore each setting one by one!

# by USS Sovereign

# Imports
import nt
import Foundation
from Custom import FoundationConfig 
from Custom.DS9FX.DS9FXLib.Backups import bFoundationConfig

# Vars
sConfig = None
bConfig = None

# File Paths
sBackup = "scripts\\Custom\\DS9FX\\DS9FXLib\\Backups\\bFoundationConfig.py"
sFdtnPath = "scripts\\Custom\\FoundationConfig.py"


# Load current foundation config
def LoadFoundationConfig():
    debug(__name__ + ", LoadFoundationConfig")
    global sConfig
    
    sConfig = FoundationConfig.lActiveMutators

    return sConfig


# Load backup config
def LoadBackupConfig():
    debug(__name__ + ", LoadBackupConfig")
    global bConfig

    bConfig = bFoundationConfig.lActiveMutators

    return bConfig


# Save backup
def SaveBackup():
    debug(__name__ + ", SaveBackup")
    fConfig = LoadFoundationConfig()

    file = nt.open(sBackup, nt.O_WRONLY|nt.O_TRUNC|nt.O_CREAT)
    nt.write(file, "##### Generated by DS9FX\n##### Backup Foundation Mutator Copy\n##### Do not modify unless you know what you're doing\n\nlActiveMutators = " + str(fConfig))
    nt.close(file)
    
    reload(bFoundationConfig)


# Now restore foundation mutator settings
def RestoreFoundationSettings():
    debug(__name__ + ", RestoreFoundationSettings")
    fConfig = LoadBackupConfig()

    file = nt.open(sFdtnPath, nt.O_WRONLY|nt.O_TRUNC|nt.O_CREAT)
    nt.write(file, "lActiveMutators = " + str(fConfig))
    nt.close(file)
    
    reload(FoundationConfig)

    # Let people know that we restored proper settings now
    print 'DS9FX: Interacting With Foundation... Restoring Backup Mutator Settings'

    # Simply now interact with the Foundation and let it do it's thing
    Foundation.LoadConfig()
    
    
    
